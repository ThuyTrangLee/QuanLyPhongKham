<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>