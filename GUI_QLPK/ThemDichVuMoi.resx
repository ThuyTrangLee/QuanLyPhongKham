<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>